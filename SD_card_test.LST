C51 COMPILER V6.02  SD_CARD_TEST                                                           11/09/2019 12:06:30 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE SD_CARD_TEST
OBJECT MODULE PLACED IN .\SD_card_test.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\SD_card_test.c DEBUG OBJECTEXTEND

stmt level    source

   1          #include "AT89C51RC2.h"
   2          #include "stdio.h"
   3          #include "main.h"
   4          #include "PORT.H"
   5          #include "UART.h"
   6          #include "print_bytes.h"
   7          #include "SPI.h"
   8          #include "SDcard.h"
   9          #include "Long_Serial_In.h"
  10          //#include "memory_test.h"
  11          #include "LCD_routines.h"
  12          #include "Timer0_hardware_delay_1ms.h"
  13          #include "Outputs.h"
  14          #include "LED_Control.h"
  15          #include "Directory_Functions_globals.h"
  16          
  17          
  18          uint8_t code SD_start[]="SD Card Init...";
  19          uint8_t code SDSC[]="Std. Capacity";
  20          uint8_t code SDHC[]="High Capacity";
  21          
  22          xdata uint8_t buf1[512];
  23          //xdata uint8_t buf2[512];
  24          
  25          
  26          main()
  27          {
  28   1         uint32_t block_num, LBA;
  29   1         uint16_t i;
  30   1         uint8_t error_flag;
  31   1         uint8_t SD_stat;
  32   1        
  33   1         AUXR=0x0c;   // make all of XRAM available, ALE always on
  34   1         if(OSC_PER_INST==6)  // sets the x2 bit according to the OSC_PER_INST value
  35   1         {
  36   2             CKCON0=0x01;  // set X2 clock mode
  37   2         }
  38   1         else if(OSC_PER_INST==12)
  39   1         {
  40   2             CKCON0=0x00;  // set standard clock mode
  41   2         }
  42   1         
  43   1         P2_set_bit(0x0F);  // sets lower four bits of port 2 for switch inputs.
  44   1         LEDS_OFF(Amber_LED|Yellow_LED|Green_LED);
  45   1         LEDS_ON(Red_LED);
  46   1         i=0;
  47   1         while(i<=60000) i++;
  48   1         LEDS_OFF(Red_LED);
  49   1         uart_init(9600);
  50   1         LCD_Init();
  51   1           
  52   1      
  53   1         printf("SD Card Test Program\n\r\n\n");
  54   1         LCD_Print(line1,0,SD_start);   
  55   1         error_flag=SPI_Master_Init(400000UL);
C51 COMPILER V6.02  SD_CARD_TEST                                                           11/09/2019 12:06:30 PAGE 2   

  56   1         if(error_flag!=no_errors)
  57   1         {
  58   2            LEDS_ON(Red_LED);  // An error causes the program to stop
  59   2      	  UART_Transmit('S');
  60   2            while(1);
  61   2         }
  62   1         LEDS_ON(Amber_LED);
  63   1         // SD Card Initialization
  64   1         error_flag=SD_card_init();
  65   1         if(error_flag!=no_errors)
  66   1         {
  67   2            LEDS_ON(Red_LED);  // An error causes the program to stop
  68   2      	  UART_Transmit('C');
  69   2            while(1);
  70   2         }
  71   1         LEDS_OFF(Amber_LED);
  72   1         error_flag=SPI_Master_Init(20000000UL);
  73   1         if(error_flag!=no_errors)
  74   1         {
  75   2            LEDS_ON(Red_LED);  // An error causes the program to stop
  76   2      	  UART_Transmit('P');
  77   2            while(1);
  78   2         }
  79   1         for(i=0;i<512;i++)
  80   1         {
  81   2            buf1[i]=0xff;  // erase valout for debug
  82   2      //      buf2[i]=0xff;
  83   2         }
  84   1         SD_stat=Return_SD_Card_Type();
  85   1         if(SD_stat==Standard_Capacity)
  86   1         {
  87   2            LCD_Print(line2,0,SDSC);
  88   2         }
  89   1         else if(SD_stat==High_Capacity)
  90   1         {
  91   2            LCD_Print(line2,0,SDHC);
  92   2         }
  93   1      // Main Loop
  94   1      
  95   1         while(1)
  96   1         {
  97   2            printf("Input Block#: ");
  98   2            block_num=long_serial_input();
  99   2            LBA=block_num<<SD_stat;
 100   2      	  LEDS_ON(Green_LED);
 101   2      	  SPI_Select_Clear(SD_Card_Select);
 102   2            error_flag=SEND_COMMAND(CMD17,LBA);
 103   2            if(error_flag!=no_errors)
 104   2            {
 105   3               LEDS_ON(Red_LED);  // An error causes the program to stop
 106   3               while(1);
 107   3            }
 108   2            error_flag=read_block(512,buf1);
 109   2      	  LEDS_OFF(Green_LED);
 110   2      	  SPI_Select_Set(SD_Card_Select);
 111   2            if(error_flag!=no_errors)
 112   2            {
 113   3               LEDS_ON(Red_LED);  // An error causes the program to stop
 114   3               while(1);
 115   3            }
 116   2            print_memory(buf1,512);
 117   2         }
C51 COMPILER V6.02  SD_CARD_TEST                                                           11/09/2019 12:06:30 PAGE 3   

 118   1      } 
 119          
 120          
 121          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    375    ----
   CONSTANT SIZE    =     84    ----
   XDATA SIZE       =    512    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
